// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// テーブル: User
model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  image         String
  admin         Boolean
  createdAt     DateTime       @default(now())
  groupId       String?
  articles      Article[]
  notifications Notification[]
  likes         Like[]
  stocks        Stock[]
  link          Link[]
  favorite      Favorite[]
  Group         Group?         @relation(fields: [groupId], references: [id])
}

// テーブル: Article
model Article {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.LongText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  like      Int      @default(0)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  likes     Like[]
  stocks    Stock[]
  tags      Tag[]
}

model Notification {
  id          String   @id @default(cuid())
  title       String
  description String
  icon        String
  read        Boolean
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Like {
  id        String  @id @default(cuid())
  userId    String
  articleId String
  user      User    @relation(fields: [userId], references: [id])
  article   Article @relation(fields: [articleId], references: [id])
}

model Stock {
  id        String  @id @default(cuid())
  name      String
  userId    String
  articleId String
  user      User    @relation(fields: [userId], references: [id])
  article   Article @relation(fields: [articleId], references: [id])
}

model Link {
  id     String @id @default(cuid())
  name   String
  url    String
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Favorite {
  id     String @id @default(cuid())
  userId String
  tagId  String
  user   User   @relation(fields: [userId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])
}

model Tag {
  id        String     @id @default(cuid())
  name      String
  articleId String
  Article   Article    @relation(fields: [articleId], references: [id])
  Favorite  Favorite[]
}

model Group {
  id        String   @id @default(cuid())
  name      String
  users     User[]
  createdAt DateTime @default(now())
}
